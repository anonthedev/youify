import { useContext, useState, useEffect } from "react";
import { GlobalContext } from "@/app/contextProvider";

export default function CreateSpotifyPlaylist() {
  const context = useContext(GlobalContext);
  const trackURIs: string[] = [];
  const tooManyTracks: Array<any> = [];
  context.playlistTracks
    ? context.playlistTracks.map((track: any) => {
        // console.log(track.tracks.items[0].uri);
        trackURIs.push(track.tracks.items[0].uri);
      })
    : "";

  const wait = "Wait...";
  const creating = "Creating...";
  const created = "Playlist Created";

  const [playlistCompletion, setPlaylistCompletion] = useState("");

  // console.log(trackURIs.length != 0 ? trackURIs : "");

  useEffect(() => {
    if (playlistCompletion === created) {
      setTimeout(() => {
        setPlaylistCompletion("Create Playlist");
      }, 3000);
    }
  }, [playlistCompletion]);

  if (trackURIs.length > 99) {
    while (trackURIs.length > 0) {
      const x = trackURIs.splice(0, 98);
      tooManyTracks.push(x);
      // console.log(tooManyTracks);
    }
  }

  function addTracksToPlaylist(tracks: any, playlistId: number) {
    fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Authorization: "Bearer " + context.globalSpotifyToken,
      },
      body: JSON.stringify({
        uris: tracks,
        position: 0,
      }),
    });
  }

  const callCreatePlaylist = (e: any) => {
    e.preventDefault();
    setPlaylistCompletion(wait);
    setTimeout(() => {
      context.globalSpotifyToken && trackURIs.length > 0
        ? createPlaylist()
        : "";
    }, 1500);
  };

  async function createPlaylist() {
    setPlaylistCompletion(creating);
    var createPlaylistParams = {
      method: "POST",
      headers: {
        Accept: "application/json",
        "Content-Type": "application/json",
        Authorization: "Bearer " + context.globalSpotifyToken,
      },
      body: JSON.stringify({
        name: "Playlist generated by Youify",
        description: "By Youify",
        public: true,
      }),
    };

    const URL = `https://api.spotify.com/v1/users/${context.userId}/playlists`;

    fetch(URL, createPlaylistParams)
      .then((data) => {
        return data.json();
      })
      .then((resp) => {
        return resp.id;
      })
      .then((id) => {
        if (tooManyTracks.length != 0) {
          tooManyTracks.map((chunksOfTrackURIs, index) => {
            setTimeout(() => {
              addTracksToPlaylist(chunksOfTrackURIs, id);
            }, index * 700);
          });
        } else {
          addTracksToPlaylist(trackURIs, id);
        }
      })
      .then(() => {
        setPlaylistCompletion("Playlist Created");
      })
      .catch((err) => {
        console.log(err);
      });
  }
  return (
    <div className="flex">
      <button
        className={`rounded py-2 px-4 bg-[#1bc257] text-black font-raleway font-medium ${
          trackURIs.length === 0 ||
          playlistCompletion === wait ||
          playlistCompletion === creating ||
          playlistCompletion === created
            ? "opacity-50"
            : "opacity-100"
        }`}
        onClick={callCreatePlaylist}
        disabled={
          trackURIs.length === 0 ||
          playlistCompletion === wait ||
          playlistCompletion === creating ||
          playlistCompletion === created
            ? true
            : false
        }
      >
        {playlistCompletion ? playlistCompletion : "Create Playlist"}
      </button>
    </div>
  );
}
